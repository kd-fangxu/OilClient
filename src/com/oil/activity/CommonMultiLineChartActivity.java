package com.oil.activity;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import com.example.oilclient.R;

import android.app.Activity;
import android.content.Intent;
import android.content.pm.ActivityInfo;
import android.graphics.Color;
import android.os.Bundle;
import android.view.MenuItem;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.ImageView;
import android.widget.PopupMenu;
import android.widget.PopupMenu.OnMenuItemClickListener;
import lecho.lib.hellocharts.gesture.ZoomType;
import lecho.lib.hellocharts.listener.ViewportChangeListener;
import lecho.lib.hellocharts.model.Axis;
import lecho.lib.hellocharts.model.AxisValue;
import lecho.lib.hellocharts.model.Line;
import lecho.lib.hellocharts.model.LineChartData;
import lecho.lib.hellocharts.model.PointValue;
import lecho.lib.hellocharts.model.Viewport;
import lecho.lib.hellocharts.view.LineChartView;
import lecho.lib.hellocharts.view.PreviewLineChartView;

public class CommonMultiLineChartActivity extends Activity {
	LineChartView lineChar;
	PreviewLineChartView preLinechart;
	ImageView iv_more, iv_pageback;
	List<Map<String, Object>> mapContentList;// 数据列表
	// LineChartView lineChart;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_commonlinechart);
		Intent intent = getIntent();
		if (intent != null) {
			mapContentList = (List<Map<String, Object>>) intent.getSerializableExtra("dataList");
			if (mapContentList != null) {
				initView();
				initLineChart();
			}
		}
	}

	private void initView() {
		// TODO Auto-generated method stub
		iv_more = (ImageView) findViewById(R.id.iv_more);
		iv_more.setOnClickListener(new OnClickListener() {

			@Override
			public void onClick(View v) {
				// TODO Auto-generated method stub
				// lineChar.setZoomLevelWithAnimation(6, chartModel.maxData, 2);
				initMenuPop();
			}
		});
		iv_pageback = (ImageView) findViewById(R.id.iv_pageback);
		iv_pageback.setOnClickListener(new OnClickListener() {

			@Override
			public void onClick(View v) {
				// TODO Auto-generated method stub
				finish();
			}
		});
		lineChar = (LineChartView) findViewById(R.id.chart_product_details);
		preLinechart = (PreviewLineChartView) findViewById(R.id.chart_pre_linechart);
	}

	// boolean isShownLable = false;

	private void initLineChart() {
		// TODO Auto-generated method stub
		List<Line> lines = new ArrayList<Line>();
		// List<Line> preViewlines = new ArrayList<Line>();
		List<PointValue> zlValueList = new ArrayList<PointValue>();
		List<PointValue> ddValueList = new ArrayList<PointValue>();
		List<PointValue> gdValueList = new ArrayList<PointValue>();
		List<AxisValue> XlableValue = new ArrayList<AxisValue>();// 横轴标签列
		for (int i = 0; i < mapContentList.size(); i++) {
			zlValueList.add(new PointValue(i, Float.valueOf(mapContentList.get(i).get("unit_value_zl").toString())));
			ddValueList.add(new PointValue(i, Float.valueOf(mapContentList.get(i).get("unit_value_dd").toString())));
			gdValueList.add(new PointValue(i, Float.valueOf(mapContentList.get(i).get("unit_value_gd").toString())));
			XlableValue.add(new AxisValue(i).setLabel(mapContentList.get(i).get("data_time").toString()));
		}
		Line zlLine = new Line(zlValueList);
		zlLine.setColor(Color.RED);
		zlLine.setStrokeWidth(1);
		zlLine.setPointRadius(3);
		Line ddLine = new Line(ddValueList);
		ddLine.setColor(Color.BLUE);
		ddLine.setStrokeWidth(1);
		ddLine.setPointRadius(3);
		Line gdLine = new Line(gdValueList);
		gdLine.setColor(Color.GREEN);
		gdLine.setStrokeWidth(1);
		gdLine.setPointRadius(3);
		lines.add(zlLine);
		lines.add(ddLine);
		lines.add(gdLine);
		if (isShowLable) {
			for (int i = 0; i < lines.size(); i++) {
				lines.get(i).setHasLabels(true);
			}
		}

		LineChartData lineChartData = new LineChartData(lines);

		LineChartData preViewData = new LineChartData(lineChartData);
		Axis axisX = new Axis(XlableValue);
		axisX.setHasTiltedLabels(true);
		axisX.setHasLines(true);
		axisX.setInside(true);
		Axis axisY = new Axis();
		axisY.setHasLines(true);
		axisY.setAutoGenerated(true);
		axisY.setInside(true);
		lineChartData.setAxisXBottom(axisX);
		lineChartData.setAxisYLeft(axisY);
		lineChar.setViewportCalculationEnabled(true);
		lineChar.setLineChartData(lineChartData);

		preLinechart.setViewportChangeListener(new ViewportChangeListener() {

			@Override
			public void onViewportChanged(Viewport viewport) {
				// TODO Auto-generated method stub
				lineChar.setCurrentViewport(viewport);
			}
		});
		// Viewport viewPort = new Viewport(0, 10000, 6, 0);
		//
		// lineChar.setCurrentViewportWithAnimation(viewPort, 1000);
		for (int i = 0; i < preViewData.getLines().size(); i++) {
			preViewData.getLines().get(i).setHasLabels(false);
		}
		preLinechart.setLineChartData(preViewData);
		preLinechart.setZoomType(ZoomType.HORIZONTAL);

	}

	PopupMenu pmenu;
	boolean isShowLable = true;
	boolean isLandScape = false;

	private void initMenuPop() {
		// TODO Auto-generated method stub
		pmenu = new PopupMenu(CommonMultiLineChartActivity.this, iv_more);
		pmenu.getMenuInflater().inflate(R.menu.popu_menu_chart, pmenu.getMenu());
		pmenu.setOnMenuItemClickListener(new OnMenuItemClickListener() {

			@Override
			public boolean onMenuItemClick(MenuItem item) {
				// TODO Auto-generated method stub
				switch (item.getItemId()) {
				case R.id.item_showlable:
					isShowLable = !isShowLable;
					initLineChart();
					break;
				case R.id.item_screentrans:
					// isLandScape = !isLandScape;
					if (isLandScape) {
						setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);
						isLandScape = false;
					} else {
						setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE);
						isLandScape = true;
					}
					break;
				case R.id.item_totalchartshow:
					if (preLinechart.isShown()) {
						preLinechart.setVisibility(View.GONE);
					} else {
						preLinechart.setVisibility(View.VISIBLE);
					}
					break;
				default:
					break;
				}
				return true;
			}
		});
		pmenu.show();
	}

}
